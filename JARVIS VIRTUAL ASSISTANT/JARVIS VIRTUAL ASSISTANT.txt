import pyttsx3 
import speech_recognition as sr #pip install 
import datetime
import wikipedia #pip install wikipedia
import webbrowser
import os
import smtplib

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
# print(voices[1].id)
engine.setProperty('voice', voices[0].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning!")

    elif hour>=12 and hour<18:
        speak("Good Afternoon!")   

    else:
        speak("Good Evening!")  

    speak("Hello!! Sameer, I am Jarvis your Virtual Assistance Sir. Please tell me how may I help you")       

def takeCommand():
    #It takes microphone input from the user and returns string output

    r = sr.Recognizer()
    with sr.Microphone() as source:
        speak("Tell me Sir!!, I am Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        speak("Recognizing... your command")    
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}\n")

    except Exception as e:
        # print(e)    
        speak("Sorry Sir!!, I can't understand, Say that again please...")  
        return "None"
    return query

def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('9921004645@klu.ac.in', '8712341787')
    server.sendmail('9921004645@klu.ac.in','sameersyed2999@gmail.com', to, content)
    server.close()
    
if __name__ == "__main__":
    wishMe()
    while True:
    # if 1:
        query = takeCommand().lower()

        # Logic for executing tasks based on query
        if 'wikipedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            print(results)
            speak(results)
        
        elif 'open youtube' in query:
            speak("opening Youtube Sir!!, anything else")
            webbrowser.open("youtube.com")
        
        elif 'open facebook' in query:
            speak("opening Facebook Sir!!, anything else")
            webbrowser.open("facebook.com")
            
        elif 'open whatsapp' in query:
            speak("opening whatsapp Sir!!, anything else")
            webbrowser.open("whatsapp.com")

        elif 'open google' in query:
            speak("opening google Sir!, anything else")
            webbrowser.open("google.com")

        elif 'open instagram' in query:
            speak("opening instagram Sir!!, anything else")
            webbrowser.open("instagram.com") 
        
        elif 'open spotify' in query:
            speak("opening spotify!!")
            webbrowser.open("spotify.com")

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")    
            speak(f"Sir, the time is {strTime}")

        elif 'email to sameer' in query:
            try:
                speak("What should I say?")
                content = takeCommand()
                to = "sameersyed2999@gmail.com"    
                sendEmail(to, content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry Sameer Sir!!. I am not able to send this email")
        
        else:
            print("No query matched")